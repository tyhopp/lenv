name: cd

on:
  push:
    branches:
      - main

jobs:
  cd:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        os: [linux, windows]
        arch: [amd64, arm64]
    steps:
    - name: checkout-code
      uses: actions/checkout@v4

    - name: set-up-go
      uses: actions/setup-go@v5

    - name: install-deps
      run: make deps

    - name: build
      working-directory: ${{ github.workspace }}
      run: GOOS=${{ matrix.os }} GOARCH=${{ matrix.arch }} make build

    - name: get-version
      working-directory: ${{ github.workspace }}
      run: ./scripts/get-version.sh

    - name: check-tag-exists
      working-directory: ${{ github.workspace }}
      run: ./scripts/get-version.sh

    - name: create-github-release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ env.VERSION }}
        release_name: Release ${{ env.VERSION }}
        draft: false
        prerelease: false

    - name: upload-executable
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./lenv-${{ matrix.os }}-${{ matrix.arch }}
        asset_name: lenv-${{ matrix.os }}-${{ matrix.arch }}${{ matrix.os == 'windows' && '.exe' || '' }}
        asset_content_type: application/octet-stream
